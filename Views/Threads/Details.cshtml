@using System.Security.Claims;
@model NewProject.Models.TopicStart

@{
    ViewData["Title"] = "Details";
}

@{
    String topicStartImgSrc = Model.User.UserPic is not null
        ? String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.User.UserPic))
        : "https://cdn.discordapp.com/attachments/909252875258048522/1140788289905901578/no-avatar.webp";
}
<script>
    let id;
    function openDeleteModal(answerId) {
        const modal = document.getElementById('deleteDialog');
        const hiddenDeleteInput = document.getElementById('hiddenDeleteId');
        id = answerId
        hiddenDeleteInput.value = answerId;
        modal.showModal();
    }
    function closeDeleteModal() {
        const modal = document.getElementById('deleteDialog');
        id = null;
        modal.close();
    }
    function openEditModal(answerId) {
        const modal = document.getElementById('editDialog');
        const hiddenEditInput = document.getElementById('hiddenEditId');
        id = answerId;
        hiddenEditInput.value = answerId;
        modal.showModal();
    }
    function closeEditModal() {
        const modal = document.getElementById('editDialog');
        id = null;
        modal.close();
    }
</script>
<div class="container" style="margin-bottom: 16px">
    <div class="row">
        <div class="col">
            №<b>1</b>&nbsp;
            @Html.DisplayFor(model => Model.User.Email)&nbsp;
            @Html.DisplayFor(modelItem => Model.CreateDate)
        </div>
    </div>
    <div class="col">
        <div class="row">
            <div class="col">
                <img class="img-thumbnail" width="200px" height="200px" src="@topicStartImgSrc" />
            </div>
            <div class="col-sm-10">
                <div class="row">
                    <div class="col">
                        <h2><b>@Html.DisplayFor(modelItem => Model.Title)</b></h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        @Html.DisplayFor(model => Model.Text)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@foreach (var (index, answer) in @Model.Answers.Select((answer, i) => (i, answer)))
{
    <div class="container" style="margin-bottom: 8px">
        <div class="row">
            @{
                String imgSrc = answer?.User?.UserPic is not null
                ? String.Format("data:image/png;base64,{0}", Convert.ToBase64String(answer.User.UserPic))
                : "https://cdn.discordapp.com/attachments/909252875258048522/1140788289905901578/no-avatar.webp";
            }
            <div class="col">
                <img class="img-thumbnail" width="200px" height="200px" src="@imgSrc" />
            </div>
            <div class="col-sm-11">
                <div class="row">
                    <div class="col-sm-9">
                        №<b>@(index + 2)</b>&nbsp;
                        Автор: <b>@Html.DisplayFor(modelItem => answer.User.Email)</b>&nbsp;
                    </div>
                    <div class="col">
                        Дата создания: <b>@Html.DisplayFor(modelItem => answer.CreateDate)</b><br>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        @Html.DisplayFor(i => answer.Text)
                    </div>
                </div>
                @if ((ViewData["visitingUserId"] is not null && ViewData["visitingUserId"].Equals(answer.ApplicationUserId)) || (ViewData["userIsAdmin"] is not null && ViewData["userIsAdmin"].Equals(true)))
                {
                    <div class="row">
                        <div class="col">
                            <a id="editDialogButton" onclick="
                            openEditModal(@answer.AnswerId)
                        ">Edit</a>
                            &nbsp;
                            <a id="deleteDialogButton" onclick="
                            openDeleteModal(@answer.AnswerId)
                        ">Delete</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}
@if (User.Identity?.IsAuthenticated is not null && User.Identity.IsAuthenticated)
{
    <div class="row">
        <form asp-action="Answer" asp-controller="Answers">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type='hidden' name="id" value="@Model.ThreadId" />
            <div class="mb-3">
                <label class="control-label">Your answer</label>
                <textarea type="text" name="text" class="form-control"></textarea>
            </div>
            <div class="form-group">
                <input type="submit" id="@Model.ThreadId" value="Answer" class="btn btn-primary" />
            </div>
        </form>
    </div>
}

<div class="row">
    <a asp-action="Index">Back to List</a>
</div>

<dialog id="deleteDialog">
    <div class="text-center">
        Are you sure that you want to delete your answer?
        <div class="container-fluid">
            <div class="row">
                <form asp-action="DeleteAnswer" asp-controller="Answers" class="col">
                    <input id="hiddenDeleteId" type="hidden" name="answerId" />
                    <input type="submit" class="btn btn-primary" value="Yes" />
                </form>
                <div class="col">
                    <button class="btn btn-secondary" id="prevenDeletingButton" onclick="closeDeleteModal()">No</button>
                </div>
            </div>
        </div>
    </div>
</dialog>

<dialog id="editDialog">
    <div class="text-center">
        Enter new text for your answer
        <form asp-action="EditAnswer" asp-controller="Answers" class="container-fluid">
            <input id="hiddenEditId" type="hidden" name="answerId" />
            <div class="row">
                <textarea type="text" name="newText" class="form-control"></textarea>
            </div>
            <div class="row">
                <input type="submit" class="btn btn-primary" value="Edit" />
                <button class="btn btn-secondary" id="prevenDeletingButton" onclick="closeEditModal()">Close</button>
            </div>
        </form>
    </div>
</dialog>